{"mappings":"YAGkB,IAOdA,EAoEIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAC,EAlFFC,EAAcC,SAASC,eAAe,eACtCC,EAAcF,SAASG,cAAc,yBACrCC,EAAeJ,SAASG,cAAc,0BACtCE,EAAiBL,SAASG,cAAc,4BACxCG,EAAiBN,SAASG,cAAc,4BACxCI,EAAiBP,SAASC,eAAe,mBAarB,SAAjBO,EAAYC,GACnB,IACMC,EAAiBD,GADH,IAAIE,MAAOC,UAIzBC,EAAOC,KAAKC,MAAML,EAAkB,OACpCd,EAAQkB,KAAKC,MAAML,EAAmB,MAAyB,MAC/Db,EAAUiB,KAAKC,MAAML,EAAmB,KAAoB,KAC5DM,EAAUF,KAAKC,MAAML,EAAmB,IAAc,KAGlCR,EAAde,YAAcC,EAAgBL,GAC1CT,EAAaa,YAAcC,EAAgBtB,GAC3CS,EAAeY,YAAcC,EAAgBrB,GAC7CS,EAAeW,YAAcC,EAAgBF,GAGzCN,GAAkB,IACpBS,cAAc5B,GACA6B,I,CAKwC,SAAjDF,EAAgBG,GACvB,OAAOA,EAAQ,GAAK,IAAUC,OAAND,GAAUA,C,CAsBJ,SAAvBD,IACP,IAAMG,EAAe,IAAIZ,KAAKJ,EAAec,OAAOT,UAC9CY,GAAc,IAAIb,MAAOC,UAG+Bb,EAAlD0B,SAAWF,GAAgBC,C,CAKjChC,EAAkB,IAAImB,KACtBlB,EAAOD,EAAgBkC,cACvBhC,GAASF,EAAgBmC,WAAa,GAAGC,WAAWC,SAAS,EAAG,KAChElC,EAAMH,EAAgBsC,UAAUF,WAAWC,SAAS,EAAG,KACvDjC,EAAQJ,EAAgBuC,WAAWH,WAAWC,SAAS,EAAG,KAC1DhC,EAAUL,EAAgBwC,aAAaJ,WAAWC,SAAS,EAAG,KAE9D/B,EAAkB,GAAWwB,OAAR7B,EAAK,KAAY6B,OAAT5B,EAAM,KAAU4B,OAAP3B,EAAI,KAAY2B,OAAT1B,EAAM,KAAW0B,OAARzB,GAC5DU,EAAec,MAAQvB,EACvBsB,IAvEmBb,EAAN0B,iBAAiB,UAAU,WACxCb,G,IAiCwBrB,EAAdkC,iBAAiB,SAAS,WAET,IAArBxB,EAAa,IAAIE,KAAKJ,EAAec,OAAOT,UAG9CsB,MAAMzB,GACR0B,MAAM,wCAKoB5C,EAAR6C,YAAY5B,EAAa,IAAMC,GAGpCV,EAAH0B,UAAW,E","sources":["src/js/02-timer.js"],"sourcesContent":["// js/02-timer.js\n\n// Отримання елементів DOM\nconst startButton = document.getElementById('startButton');\nconst daysElement = document.querySelector('[data-days] .top-line');\nconst hoursElement = document.querySelector('[data-hours] .top-line');\nconst minutesElement = document.querySelector('[data-minutes] .top-line');\nconst secondsElement = document.querySelector('[data-seconds] .top-line');\nconst datetimePicker = document.getElementById('datetime-picker');\n\nlet countdownInterval;\n\n// Встановлення початкових значень для datetimePicker\nsetInitialDatetime();\n\n// Обробник зміни значення datetimePicker\ndatetimePicker.addEventListener('change', () => {\n  updateStartButtonStatus();\n});\n\n// Функція для оновлення таймера\nfunction updateTimer(targetDate) {\n  const currentDate = new Date().getTime();\n  const timeDifference = targetDate - currentDate;\n\n  // Розрахунок днів, годин, хвилин та секунд\n  const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n  const hours = Math.floor((timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  const minutes = Math.floor((timeDifference % (1000 * 60 * 60)) / (1000 * 60));\n  const seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);\n\n  // Оновлення значень на сторінці\n  daysElement.textContent = formatTimeValue(days);\n  hoursElement.textContent = formatTimeValue(hours);\n  minutesElement.textContent = formatTimeValue(minutes);\n  secondsElement.textContent = formatTimeValue(seconds);\n\n  // Перевірка, чи таймер досягнув нуля\n  if (timeDifference <= 0) {\n    clearInterval(countdownInterval); // Зупинка таймера\n    updateStartButtonStatus();        // Оновлення статусу кнопки \"Start\"\n  }\n}\n\n// Функція для форматування числових значень (додавання 0 перед числами < 10)\nfunction formatTimeValue(value) {\n  return value < 10 ? `0${value}` : value;\n}\n\n// Обробник натискання на кнопку \"Start\"\nstartButton.addEventListener('click', () => {\n  // Отримання введеної дати та часу\n  const targetDate = new Date(datetimePicker.value).getTime();\n\n  // Перевірка, чи введена коректна дата\n  if (isNaN(targetDate)) {\n    alert('Please enter a valid date and time.');\n    return;\n  }\n\n  // Оновлення таймера кожну секунду\n  countdownInterval = setInterval(updateTimer, 1000, targetDate);\n\n  // Вимикаємо кнопку \"Start\"\n  startButton.disabled = true;\n});\n\n// Функція для оновлення статусу кнопки \"Start\"\nfunction updateStartButtonStatus() {\n  const selectedDate = new Date(datetimePicker.value).getTime();\n  const currentDate = new Date().getTime();\n\n  // Активація кнопки \"Start\" лише якщо вибрана дата та час більші за поточну системну\n  startButton.disabled = selectedDate <= currentDate;\n}\n\n// Функція для встановлення початкових значень для datetimePicker\nfunction setInitialDatetime() {\n  const currentDatetime = new Date();\n  const year = currentDatetime.getFullYear();\n  const month = (currentDatetime.getMonth() + 1).toString().padStart(2, '0');\n  const day = currentDatetime.getDate().toString().padStart(2, '0');\n  const hours = currentDatetime.getHours().toString().padStart(2, '0');\n  const minutes = currentDatetime.getMinutes().toString().padStart(2, '0');\n\n  const initialDatetime = `${year}-${month}-${day}T${hours}:${minutes}`;\n  datetimePicker.value = initialDatetime;\n  updateStartButtonStatus(); // Оновлення статусу кнопки \"Start\"\n}\n"],"names":["$84b9dae4df53835d$var$countdownInterval","currentDatetime","year","month","day","hours","minutes","initialDatetime","$84b9dae4df53835d$var$startButton","document","getElementById","$84b9dae4df53835d$var$daysElement","querySelector","$84b9dae4df53835d$var$hoursElement","$84b9dae4df53835d$var$minutesElement","$84b9dae4df53835d$var$secondsElement","$84b9dae4df53835d$var$datetimePicker","$84b9dae4df53835d$var$updateTimer","targetDate","timeDifference","Date","getTime","days","Math","floor","seconds","textContent","$84b9dae4df53835d$var$formatTimeValue","clearInterval","$84b9dae4df53835d$var$updateStartButtonStatus","value","concat","selectedDate","currentDate","disabled","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","addEventListener","isNaN","alert","setInterval"],"version":3,"file":"02-timer.64e10e8a.js.map"}